{"ast":null,"code":"import _regeneratorRuntime from\"/opt/tezos/nft-shop-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/opt/tezos/nft-shop-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/opt/tezos/nft-shop-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{TezosToolkit}from\"@taquito/taquito\";import{ToastContainer,toast}from'react-toastify';import\"./App.css\";import ConnectButton from\"./components/ConnectWallet\";import DisconnectButton from\"./components/DisconnectWallet\";import qrcode from\"qrcode-generator\";import{DataGrid}from'@material-ui/data-grid';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var columns=[{field:'id',headerName:'ID',width:300},{field:'stock',headerName:'Stock',width:400},{field:'price',headerName:'Price',width:400},{field:'address',headerName:'NFT address',width:800},{field:'admin',headerName:'admin',width:800}];var BeaconConnection;(function(BeaconConnection){BeaconConnection[\"NONE\"]=\"\";BeaconConnection[\"LISTENING\"]=\"Listening to P2P channel\";BeaconConnection[\"CONNECTED\"]=\"Channel connected\";BeaconConnection[\"PERMISSION_REQUEST_SENT\"]=\"Permission request sent, waiting for response\";BeaconConnection[\"PERMISSION_REQUEST_SUCCESS\"]=\"Wallet is connected\";})(BeaconConnection||(BeaconConnection={}));var App=function App(){var _useState=useState(new TezosToolkit(\"https://florencenet.api.tez.ie\")),_useState2=_slicedToArray(_useState,2),Tezos=_useState2[0],setTezos=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),contract=_useState4[0],setContract=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),publicToken=_useState6[0],setPublicToken=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),wallet=_useState8[0],setWallet=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),userAddress=_useState10[0],setUserAddress=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),userBalance=_useState12[0],setUserBalance=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),storage=_useState14[0],setStorage=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),copiedPublicToken=_useState16[0],setCopiedPublicToken=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),beaconConnection=_useState18[0],setBeaconConnection=_useState18[1];var _useState19=useState(\"buy\"),_useState20=_slicedToArray(_useState19,2),activeTab=_useState20[0],setActiveTab=_useState20[1];var _useState21=useState(),_useState22=_slicedToArray(_useState21,2),nftList=_useState22[0],setNftList=_useState22[1];var _useState23=useState(),_useState24=_slicedToArray(_useState23,2),buyId=_useState24[0],setBuyId=_useState24[1];var _useState25=useState(),_useState26=_slicedToArray(_useState25,2),recoverId=_useState26[0],setRecoverId=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),loadingBuy=_useState28[0],setLoadingBuy=_useState28[1];var _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),loadingRecover=_useState30[0],setLoadingRecover=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),transactionInProgress=_useState32[0],setTransactionInProgress=_useState32[1];var toastId=React.useRef(null);// Florencenet contract\nvar contractAddress=\"KT1AMpeAQk8y1WHnRqJv1GkHLRfLPD1DS3Mi\";var generateQrCode=function generateQrCode(){var qr=qrcode(0,\"L\");qr.addData(publicToken||\"\");qr.make();return{__html:qr.createImgTag(4)};};useEffect(function(){if(transactionInProgress&&!toastId.current){toastId.current=toast.info('Transaction in progress. Confirm signing dialog and please wait...',{position:'top-right',autoClose:false,hideProgressBar:false,closeOnClick:false,pauseOnHover:true,draggable:true,progress:undefined,closeButton:false});}else if(!transactionInProgress&&toastId.current){toast.dismiss(toastId.current);toastId.current=null;}},[transactionInProgress,toastId.current]);function buy_nft(){return _buy_nft.apply(this,arguments);}function _buy_nft(){_buy_nft=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var op,newStorage,newNftList;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(typeof buyId!=='undefined'&&buyId&&nftList)){_context.next=32;break;}setLoadingBuy(true);setTransactionInProgress(true);_context.prev=3;_context.next=6;return contract.methods.buy(buyId).send({amount:nftList[buyId].price});case 6:op=_context.sent;_context.next=9;return op.confirmation();case 9:_context.next=11;return contract.storage();case 11:newStorage=_context.sent;if(newStorage)setStorage(newStorage);newNftList=[];newStorage.forEach(function(value,key,idx){newNftList.push({id:key,stock:value.current_stock.toNumber(),price:value.token_price.toNumber()/1000000,address:value.token_address,admin:value.token_admin});});setNftList(newNftList);_context.t0=setUserBalance;_context.next=19;return Tezos.tz.getBalance(userAddress);case 19:_context.t1=_context.sent;(0,_context.t0)(_context.t1);toast(\"Successfully bought nft\",{type:'success'});_context.next=28;break;case 24:_context.prev=24;_context.t2=_context[\"catch\"](3);console.log(_context.t2);toast.error('There was an error sending your transaction. Please check developer console.');case 28:_context.prev=28;setLoadingBuy(false);setTransactionInProgress(false);return _context.finish(28);case 32:case\"end\":return _context.stop();}}},_callee,null,[[3,24,28,32]]);}));return _buy_nft.apply(this,arguments);}function recover_nft(){return _recover_nft.apply(this,arguments);}function _recover_nft(){_recover_nft=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var op,newStorage,newNftList;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(typeof recoverId!=='undefined'&&recoverId)){_context2.next=32;break;}setLoadingBuy(true);setTransactionInProgress(true);_context2.prev=3;_context2.next=6;return contract.methods.recover(recoverId).send();case 6:op=_context2.sent;_context2.next=9;return op.confirmation();case 9:_context2.next=11;return contract.storage();case 11:newStorage=_context2.sent;if(newStorage)setStorage(newStorage);newNftList=[];newStorage.forEach(function(value,key,idx){newNftList.push({id:key,stock:value.current_stock.toNumber(),price:value.token_price.toNumber()/1000000,address:value.token_address,admin:value.token_admin});});setNftList(newNftList);_context2.t0=setUserBalance;_context2.next=19;return Tezos.tz.getBalance(userAddress);case 19:_context2.t1=_context2.sent;(0,_context2.t0)(_context2.t1);toast(\"Successfully recovered your nft\",{type:\"success\"});_context2.next=28;break;case 24:_context2.prev=24;_context2.t2=_context2[\"catch\"](3);console.log(_context2.t2);toast.error('There was an error sending your transaction. Please check developer console.');case 28:_context2.prev=28;setTransactionInProgress(false);setLoadingBuy(false);return _context2.finish(28);case 32:case\"end\":return _context2.stop();}}},_callee2,null,[[3,24,28,32]]);}));return _recover_nft.apply(this,arguments);}if(publicToken&&(!userAddress||isNaN(userBalance))){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Buy my NFTs on Tezos\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"dialog\",children:[/*#__PURE__*/_jsx(\"header\",{children:\"Welcome to this NFT DApp\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"content\",children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-align-cent0er\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-broadcast-tower\"}),\"\\xA0 Connecting to your wallet\"]}),/*#__PURE__*/_jsx(\"div\",{dangerouslySetInnerHTML:generateQrCode(),className:\"text-align-center\"}),/*#__PURE__*/_jsxs(\"p\",{id:\"public-token\",children:[copiedPublicToken?/*#__PURE__*/_jsx(\"span\",{id:\"public-token-copy__copied\",children:/*#__PURE__*/_jsx(\"i\",{className:\"far fa-thumbs-up\"})}):/*#__PURE__*/_jsx(\"span\",{id:\"public-token-copy\",onClick:function onClick(){if(publicToken){navigator.clipboard.writeText(publicToken);setCopiedPublicToken(true);setTimeout(function(){return setCopiedPublicToken(false);},2000);}},children:/*#__PURE__*/_jsx(\"i\",{className:\"far fa-copy\"})}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Public token: \",/*#__PURE__*/_jsx(\"span\",{children:publicToken})]})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-align-center\",children:[\"Status: \",beaconConnection?\"Connected\":\"Disconnected\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"footer\",children:/*#__PURE__*/_jsx(\"img\",{src:\"built-with-taquito.png\",alt:\"Built with Taquito\"})})]});}else if(userAddress&&!isNaN(userBalance)){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Buy my NFTs on Tezos\"}),/*#__PURE__*/_jsx(\"div\",{id:\"tabs\",children:/*#__PURE__*/_jsx(\"div\",{id:\"buy\",className:activeTab===\"buy\"?\"active\":\"\",onClick:function onClick(){return setActiveTab(\"buy\");},children:\"Buy NFT\"})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{style:{height:400,width:'90%'},children:/*#__PURE__*/_jsx(DataGrid,{rows:nftList,columns:columns,pageSize:100})}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'90%'},children:[\"\\xA0\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"\\xA0\",/*#__PURE__*/_jsx(\"span\",{children:\" Enter Nft ID to buy \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"\\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"NFT ID\",value:buyId,onChange:function onChange(e){return setBuyId(parseInt(e.target.value,10));}}),\"\\xA0\",/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:buy_nft,children:loadingBuy?/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-spinner fa-spin\"}),\"\\xA0 Please wait\"]}):/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\"\\xA0 Buy NFT\"]})})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'90%'},children:[\"\\xA0\",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"\\xA0\",/*#__PURE__*/_jsx(\"span\",{children:\" Enter Nft ID to recover \"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),\"\\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"NFT ID\",value:recoverId,onChange:function onChange(e){return setRecoverId(parseInt(e.target.value,10));}}),\"\\xA0\",/*#__PURE__*/_jsx(\"button\",{className:\"button\",onClick:recover_nft,children:loadingRecover?/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-spinner fa-spin\"}),\"\\xA0 Please wait\"]}):/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-plus\"}),\"\\xA0 Recover NFT\"]})})]})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\xA0\",/*#__PURE__*/_jsx(\"i\",{className:\"far fa-file-code\"}),\"\\xA0\",/*#__PURE__*/_jsx(\"a\",{href:\"https://better-call.dev/florencenet/\".concat(contractAddress,\"/operations\"),target:\"_blank\",rel:\"noopener noreferrer\",children:contractAddress})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\xA0\",/*#__PURE__*/_jsx(\"i\",{className:\"far fa-address-card\"}),\"\\xA0 \",userAddress]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\xA0\",/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-piggy-bank\"}),\"\\xA0\",(userBalance/1000000).toLocaleString(\"en-US\"),\" \\uA729\"]}),/*#__PURE__*/_jsx(DisconnectButton,{wallet:wallet,setPublicToken:setPublicToken,setUserAddress:setUserAddress,setUserBalance:setUserBalance,setWallet:setWallet,setTezos:setTezos,setBeaconConnection:setBeaconConnection}),/*#__PURE__*/_jsx(\"div\",{id:\"footer\",children:/*#__PURE__*/_jsx(\"img\",{src:\"built-with-taquito.png\",alt:\"Built with Taquito\"})})]});}else if(!publicToken&&!userAddress&&!userBalance){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"title\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Buy my NFTs on Tezos\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://app.netlify.com/start/deploy?repository=https://github.com/ecadlabs/taquito-boilerplate\",children:/*#__PURE__*/_jsx(\"img\",{src:\"https://www.netlify.com/img/deploy/button.svg\",alt:\"netlify-button\"})})]}),/*#__PURE__*/_jsxs(\"div\",{id:\"dialog\",children:[/*#__PURE__*/_jsx(\"header\",{children:\"Welcome to this NFT DApp\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"content\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Hello!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Go forth and Tezos!\"})]}),/*#__PURE__*/_jsx(ConnectButton,{Tezos:Tezos,setContract:setContract,setPublicToken:setPublicToken,setWallet:setWallet,setUserAddress:setUserAddress,setUserBalance:setUserBalance,setStorage:setStorage,setNftList:setNftList,contractAddress:contractAddress,setBeaconConnection:setBeaconConnection,wallet:wallet})]}),/*#__PURE__*/_jsx(\"div\",{id:\"footer\",children:/*#__PURE__*/_jsx(\"img\",{src:\"built-with-taquito.png\",alt:\"Built with Taquito\"})}),/*#__PURE__*/_jsx(ToastContainer,{})]});}else{return/*#__PURE__*/_jsx(\"div\",{children:\"An error has occurred\"});}};export default App;","map":{"version":3,"sources":["/opt/tezos/nft-shop-example/src/App.tsx"],"names":["React","useState","useEffect","TezosToolkit","ToastContainer","toast","ConnectButton","DisconnectButton","qrcode","DataGrid","columns","field","headerName","width","BeaconConnection","App","Tezos","setTezos","undefined","contract","setContract","publicToken","setPublicToken","wallet","setWallet","userAddress","setUserAddress","userBalance","setUserBalance","storage","setStorage","copiedPublicToken","setCopiedPublicToken","beaconConnection","setBeaconConnection","activeTab","setActiveTab","nftList","setNftList","buyId","setBuyId","recoverId","setRecoverId","loadingBuy","setLoadingBuy","loadingRecover","setLoadingRecover","transactionInProgress","setTransactionInProgress","toastId","useRef","contractAddress","generateQrCode","qr","addData","make","__html","createImgTag","current","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","closeButton","dismiss","buy_nft","methods","buy","send","amount","price","op","confirmation","newStorage","newNftList","forEach","value","key","idx","push","id","stock","current_stock","toNumber","token_price","address","token_address","admin","token_admin","tz","getBalance","type","console","log","error","recover_nft","recover","isNaN","navigator","clipboard","writeText","setTimeout","height","e","parseInt","target","toLocaleString"],"mappings":"mbAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,YAAT,KAA6B,kBAA7B,CACA,OAASC,cAAT,CAAyBC,KAAzB,KAAsC,gBAAtC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,+BAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,OAASC,QAAT,KAA4D,wBAA5D,C,wFAKA,GAAMC,CAAAA,OAAqB,CAAG,CAC5B,CAAEC,KAAK,CAAE,IAAT,CAAeC,UAAU,CAAE,IAA3B,CAAiCC,KAAK,CAAE,GAAxC,CAD4B,CAE5B,CACEF,KAAK,CAAE,OADT,CAEEC,UAAU,CAAE,OAFd,CAGEC,KAAK,CAAE,GAHT,CAF4B,CAO5B,CACEF,KAAK,CAAE,OADT,CAEEC,UAAU,CAAE,OAFd,CAGEC,KAAK,CAAE,GAHT,CAP4B,CAa5B,CACEF,KAAK,CAAE,SADT,CAEEC,UAAU,CAAE,aAFd,CAGEC,KAAK,CAAE,GAHT,CAb4B,CAkB5B,CACEF,KAAK,CAAE,OADT,CAEEC,UAAU,CAAE,OAFd,CAGEC,KAAK,CAAE,GAHT,CAlB4B,CAA9B,C,GA0BKC,CAAAA,gB,WAAAA,gB,EAAAA,gB,YAAAA,gB,yCAAAA,gB,kCAAAA,gB,4EAAAA,gB,wDAAAA,gB,GAAAA,gB,MAQL,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACUd,QAAQ,CAChC,GAAIE,CAAAA,YAAJ,CAAiB,gCAAjB,CADgC,CADlB,wCACTa,KADS,eACFC,QADE,8BAIgBhB,QAAQ,CAAMiB,SAAN,CAJxB,yCAITC,QAJS,eAICC,WAJD,8BAKsBnB,QAAQ,CAAgB,EAAhB,CAL9B,yCAKToB,WALS,eAKIC,cALJ,8BAMYrB,QAAQ,CAAM,IAAN,CANpB,yCAMTsB,MANS,eAMDC,SANC,8BAOsBvB,QAAQ,CAAS,EAAT,CAP9B,0CAOTwB,WAPS,gBAOIC,cAPJ,gCAQsBzB,QAAQ,CAAS,CAAT,CAR9B,2CAQT0B,WARS,gBAQIC,cARJ,gCASc3B,QAAQ,EATtB,2CAST4B,OATS,gBASAC,UATA,gCAUkC7B,QAAQ,CAAU,KAAV,CAV1C,2CAUT8B,iBAVS,gBAUUC,oBAVV,gCAWgC/B,QAAQ,CAAU,KAAV,CAXxC,2CAWTgC,gBAXS,gBAWSC,mBAXT,gCAYkBjC,QAAQ,CAAS,KAAT,CAZ1B,2CAYTkC,SAZS,gBAYEC,YAZF,gCAacnC,QAAQ,EAbtB,2CAaToC,OAbS,gBAaAC,UAbA,gCAcUrC,QAAQ,EAdlB,2CAcTsC,KAdS,gBAcFC,QAdE,gCAekBvC,QAAQ,EAf1B,2CAeTwC,SAfS,gBAeEC,YAfF,gCAgBoBzC,QAAQ,CAAU,KAAV,CAhB5B,2CAgBT0C,UAhBS,gBAgBGC,aAhBH,gCAiB4B3C,QAAQ,CAAU,KAAV,CAjBpC,2CAiBT4C,cAjBS,gBAiBOC,iBAjBP,gCAkB0C7C,QAAQ,CAAC,KAAD,CAlBlD,2CAkBT8C,qBAlBS,gBAkBcC,wBAlBd,gBAmBhB,GAAMC,CAAAA,OAAY,CAAGjD,KAAK,CAACkD,MAAN,CAAa,IAAb,CAArB,CAEA;AACA,GAAMC,CAAAA,eAAuB,CAAG,sCAAhC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAA0B,CAC/C,GAAMC,CAAAA,EAAE,CAAG7C,MAAM,CAAC,CAAD,CAAI,GAAJ,CAAjB,CACA6C,EAAE,CAACC,OAAH,CAAWjC,WAAW,EAAI,EAA1B,EACAgC,EAAE,CAACE,IAAH,GAEA,MAAO,CAAEC,MAAM,CAAEH,EAAE,CAACI,YAAH,CAAgB,CAAhB,CAAV,CAAP,CACD,CAND,CAQAvD,SAAS,CAAC,UAAM,CACZ,GAAI6C,qBAAqB,EAAI,CAACE,OAAO,CAACS,OAAtC,CAA+C,CAC3CT,OAAO,CAACS,OAAR,CAAkBrD,KAAK,CAACsD,IAAN,CACd,oEADc,CAEd,CACIC,QAAQ,CAAE,WADd,CAEIC,SAAS,CAAE,KAFf,CAGIC,eAAe,CAAE,KAHrB,CAIIC,YAAY,CAAE,KAJlB,CAKIC,YAAY,CAAE,IALlB,CAMIC,SAAS,CAAE,IANf,CAOIC,QAAQ,CAAEhD,SAPd,CAQIiD,WAAW,CAAE,KARjB,CAFc,CAAlB,CAaH,CAdD,IAcO,IAAI,CAACpB,qBAAD,EAA0BE,OAAO,CAACS,OAAtC,CAA+C,CAClDrD,KAAK,CAAC+D,OAAN,CAAcnB,OAAO,CAACS,OAAtB,EACAT,OAAO,CAACS,OAAR,CAAkB,IAAlB,CACH,CACJ,CAnBQ,CAmBN,CAACX,qBAAD,CAAwBE,OAAO,CAACS,OAAhC,CAnBM,CAAT,CAhCgB,QAqDDW,CAAAA,OArDC,+HAqDhB,qKAEQ,MAAO9B,CAAAA,KAAP,GAAiB,WAAjB,EAAgCA,KAAhC,EAAyCF,OAFjD,2BAIMO,aAAa,CAAC,IAAD,CAAb,CACAI,wBAAwB,CAAC,IAAD,CAAxB,CALN,sCAQyB7B,CAAAA,QAAQ,CAACmD,OAAT,CAAiBC,GAAjB,CAAqBhC,KAArB,EAA4BiC,IAA5B,CACf,CACEC,MAAM,CAAEpC,OAAO,CAACE,KAAD,CAAP,CAAemC,KADzB,CADe,CARzB,QAQcC,EARd,qCAacA,CAAAA,EAAE,CAACC,YAAH,EAbd,+BAcsCzD,CAAAA,QAAQ,CAACU,OAAT,EAdtC,SAccgD,UAdd,eAeQ,GAAIA,UAAJ,CAAgB/C,UAAU,CAAC+C,UAAD,CAAV,CACZC,UAhBZ,CAgB8B,EAhB9B,CAiBQD,UAAU,CAACE,OAAX,CAAoB,SAACC,KAAD,CAAaC,GAAb,CAA0BC,GAA1B,CAAuC,CACzDJ,UAAU,CAACK,IAAX,CAAgB,CAACC,EAAE,CAAEH,GAAL,CAAUI,KAAK,CAACL,KAAK,CAACM,aAAN,CAAoBC,QAApB,EAAhB,CAAgDb,KAAK,CAACM,KAAK,CAACQ,WAAN,CAAkBD,QAAlB,GAA8B,OAApF,CAA6FE,OAAO,CAACT,KAAK,CAACU,aAA3G,CAA0HC,KAAK,CAAEX,KAAK,CAACY,WAAvI,CAAhB,EACD,CAFD,EAGAtD,UAAU,CAACwC,UAAD,CAAV,CApBR,YAqBQlD,cArBR,wBAqB6BZ,CAAAA,KAAK,CAAC6E,EAAN,CAASC,UAAT,CAAoBrE,WAApB,CArB7B,gEAsBQpB,KAAK,CAAC,yBAAD,CAA4B,CAAC0F,IAAI,CAAC,SAAN,CAA5B,CAAL,CAtBR,iFAwBQC,OAAO,CAACC,GAAR,cACA5F,KAAK,CAAC6F,KAAN,CACE,8EADF,EAzBR,yBA6BQtD,aAAa,CAAC,KAAD,CAAb,CACAI,wBAAwB,CAAC,KAAD,CAAxB,CA9BR,sGArDgB,kDAwFDmD,CAAAA,WAxFC,2IAwFhB,0KAEQ,MAAO1D,CAAAA,SAAP,GAAqB,WAArB,EAAoCA,SAF5C,4BAIMG,aAAa,CAAC,IAAD,CAAb,CACAI,wBAAwB,CAAC,IAAD,CAAxB,CALN,wCAQyB7B,CAAAA,QAAQ,CAACmD,OAAT,CAAiB8B,OAAjB,CAAyB3D,SAAzB,EAAoC+B,IAApC,EARzB,QAQcG,EARd,uCAUcA,CAAAA,EAAE,CAACC,YAAH,EAVd,gCAWsCzD,CAAAA,QAAQ,CAACU,OAAT,EAXtC,SAWcgD,UAXd,gBAYQ,GAAIA,UAAJ,CAAgB/C,UAAU,CAAC+C,UAAD,CAAV,CACZC,UAbZ,CAa8B,EAb9B,CAcQD,UAAU,CAACE,OAAX,CAAoB,SAACC,KAAD,CAAaC,GAAb,CAA0BC,GAA1B,CAAuC,CACzDJ,UAAU,CAACK,IAAX,CAAgB,CAACC,EAAE,CAAEH,GAAL,CAAUI,KAAK,CAACL,KAAK,CAACM,aAAN,CAAoBC,QAApB,EAAhB,CAAgDb,KAAK,CAACM,KAAK,CAACQ,WAAN,CAAkBD,QAAlB,GAA8B,OAApF,CAA6FE,OAAO,CAACT,KAAK,CAACU,aAA3G,CAA0HC,KAAK,CAAEX,KAAK,CAACY,WAAvI,CAAhB,EACD,CAFD,EAGAtD,UAAU,CAACwC,UAAD,CAAV,CAjBR,aAkBQlD,cAlBR,yBAkB6BZ,CAAAA,KAAK,CAAC6E,EAAN,CAASC,UAAT,CAAoBrE,WAApB,CAlB7B,oEAmBQpB,KAAK,CAAC,iCAAD,CAAoC,CAAC0F,IAAI,CAAC,SAAN,CAApC,CAAL,CAnBR,qFAqBQC,OAAO,CAACC,GAAR,eACA5F,KAAK,CAAC6F,KAAN,CACE,8EADF,EAtBR,0BA0BQlD,wBAAwB,CAAC,KAAD,CAAxB,CACAJ,aAAa,CAAC,KAAD,CAAb,CA3BR,yGAxFgB,8CA0HhB,GAAIvB,WAAW,GAAK,CAACI,WAAD,EAAgB4E,KAAK,CAAC1E,WAAD,CAA1B,CAAf,CAAyD,CACvD,mBACE,oCACE,4CADF,cAEE,aAAK,EAAE,CAAC,QAAR,wBACE,oDADF,cAEE,aAAK,EAAE,CAAC,SAAR,wBACE,WAAG,SAAS,CAAC,oBAAb,wBACE,UAAG,SAAS,CAAC,wBAAb,EADF,oCADF,cAOE,YACE,uBAAuB,CAAEyB,cAAc,EADzC,CAEE,SAAS,CAAC,mBAFZ,EAPF,cAaE,WAAG,EAAE,CAAC,cAAN,WACGrB,iBAAiB,cAChB,aAAM,EAAE,CAAC,2BAAT,uBACE,UAAG,SAAS,CAAC,kBAAb,EADF,EADgB,cAKhB,aACE,EAAE,CAAC,mBADL,CAEE,OAAO,CAAE,kBAAM,CACb,GAAIV,WAAJ,CAAiB,CACfiF,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BnF,WAA9B,EACAW,oBAAoB,CAAC,IAAD,CAApB,CACAyE,UAAU,CAAC,iBAAMzE,CAAAA,oBAAoB,CAAC,KAAD,CAA1B,EAAD,CAAoC,IAApC,CAAV,CACD,CACF,CARH,uBAUE,UAAG,SAAS,CAAC,aAAb,EAVF,EANJ,cAoBE,sDACgB,sBAAOX,WAAP,EADhB,GApBF,GAbF,cAwCE,WAAG,SAAS,CAAC,mBAAb,sBACWY,gBAAgB,CAAG,WAAH,CAAiB,cAD5C,GAxCF,GAFF,GAFF,cAiDE,YAAK,EAAE,CAAC,QAAR,uBACE,YAAK,GAAG,CAAC,wBAAT,CAAkC,GAAG,CAAC,oBAAtC,EADF,EAjDF,GADF,CAuDD,CAxDD,IAwDO,IAAIR,WAAW,EAAI,CAAC4E,KAAK,CAAC1E,WAAD,CAAzB,CAAwC,CAE7C,mBACE,oCACE,4CADF,cAEE,YAAK,EAAE,CAAC,MAAR,uBAEE,YACE,EAAE,CAAC,KADL,CAEE,SAAS,CAAEQ,SAAS,GAAK,KAAd,CAAsB,QAAtB,CAAiC,EAF9C,CAGE,OAAO,CAAE,yBAAMC,CAAAA,YAAY,CAAC,KAAD,CAAlB,EAHX,qBAFF,EAFF,cAeE,oCACE,YAAK,KAAK,CAAE,CAACsE,MAAM,CAAC,GAAR,CAAa7F,KAAK,CAAE,KAApB,CAAZ,uBACE,KAAC,QAAD,EACE,IAAI,CAAEwB,OADR,CAEE,OAAO,CAAE3B,OAFX,CAGE,QAAQ,CAAE,GAHZ,EADF,EADF,cAUI,aAAK,KAAK,CAAE,CAACG,KAAK,CAAE,KAAR,CAAZ,+BAEG,aAFH,cAGG,aAHH,cAIG,aAJH,qBAKQ,+CALR,cAMG,aANH,cAOG,aAPH,qBAQQ,cACJ,IAAI,CAAC,QADD,CAEJ,WAAW,CAAC,QAFR,CAGJ,KAAK,CAAE0B,KAHH,CAIJ,QAAQ,CAAE,kBAAAoE,CAAC,QAAInE,CAAAA,QAAQ,CAACoE,QAAQ,CAACD,CAAC,CAACE,MAAF,CAAS7B,KAAV,CAAgB,EAAhB,CAAT,CAAZ,EAJP,EARR,qBAcQ,eACJ,SAAS,CAAC,QADN,CAEJ,OAAO,CAAEX,OAFL,UAIH1B,UAAU,cACT,qCACE,UAAG,SAAS,CAAC,wBAAb,EADF,sBADS,cAKT,qCACE,UAAG,SAAS,CAAC,aAAb,EADF,kBATE,EAdR,GAVJ,cAwCI,aAAK,KAAK,CAAE,CAAC9B,KAAK,CAAE,KAAR,CAAZ,+BAEG,aAFH,cAGG,aAHH,cAIG,aAJH,qBAKQ,mDALR,cAMG,aANH,cAOG,aAPH,qBAQQ,cACJ,IAAI,CAAC,QADD,CAEJ,WAAW,CAAC,QAFR,CAGJ,KAAK,CAAE4B,SAHH,CAIJ,QAAQ,CAAE,kBAAAkE,CAAC,QAAIjE,CAAAA,YAAY,CAACkE,QAAQ,CAACD,CAAC,CAACE,MAAF,CAAS7B,KAAV,CAAgB,EAAhB,CAAT,CAAhB,EAJP,EARR,qBAcQ,eACJ,SAAS,CAAC,QADN,CAEJ,OAAO,CAAEmB,WAFL,UAIHtD,cAAc,cACb,qCACE,UAAG,SAAS,CAAC,wBAAb,EADF,sBADa,cAKb,qCACE,UAAG,SAAS,CAAC,aAAb,EADF,sBATE,EAdR,GAxCJ,GAfF,cA4FM,yCACQ,UAAG,SAAS,CAAC,kBAAb,EADR,qBAEE,UACE,IAAI,+CAAyCM,eAAzC,eADN,CAEE,MAAM,CAAC,QAFT,CAGE,GAAG,CAAC,qBAHN,UAKGA,eALH,EAFF,GA5FN,cAuGM,yCACQ,UAAG,SAAS,CAAC,qBAAb,EADR,SACuD1B,WADvD,GAvGN,cA2GM,yCACQ,UAAG,SAAS,CAAC,mBAAb,EADR,QAEG,CAACE,WAAW,CAAG,OAAf,EAAwBmF,cAAxB,CAAuC,OAAvC,CAFH,aA3GN,cAiHI,KAAC,gBAAD,EACE,MAAM,CAAEvF,MADV,CAEE,cAAc,CAAED,cAFlB,CAGE,cAAc,CAAEI,cAHlB,CAIE,cAAc,CAAEE,cAJlB,CAKE,SAAS,CAAEJ,SALb,CAME,QAAQ,CAAEP,QANZ,CAOE,mBAAmB,CAAEiB,mBAPvB,EAjHJ,cA2HE,YAAK,EAAE,CAAC,QAAR,uBACE,YAAK,GAAG,CAAC,wBAAT,CAAkC,GAAG,CAAC,oBAAtC,EADF,EA3HF,GADF,CAiID,CAnIM,IAmIA,IAAI,CAACb,WAAD,EAAgB,CAACI,WAAjB,EAAgC,CAACE,WAArC,CAAkD,CACvD,mBACE,oCACE,aAAK,SAAS,CAAC,OAAf,wBACE,4CADF,cAEE,UAAG,IAAI,CAAC,iGAAR,uBACE,YACE,GAAG,CAAC,+CADN,CAEE,GAAG,CAAC,gBAFN,EADF,EAFF,GADF,cAUE,aAAK,EAAE,CAAC,QAAR,wBACE,oDADF,cAEE,aAAK,EAAE,CAAC,SAAR,wBACE,6BADF,cAEE,0CAFF,GAFF,cAME,KAAC,aAAD,EACE,KAAK,CAAEX,KADT,CAEE,WAAW,CAAEI,WAFf,CAGE,cAAc,CAAEE,cAHlB,CAIE,SAAS,CAAEE,SAJb,CAKE,cAAc,CAAEE,cALlB,CAME,cAAc,CAAEE,cANlB,CAOE,UAAU,CAAEE,UAPd,CAQE,UAAU,CAAEQ,UARd,CASE,eAAe,CAAEa,eATnB,CAUE,mBAAmB,CAAEjB,mBAVvB,CAWE,MAAM,CAAEX,MAXV,EANF,GAVF,cA8BE,YAAK,EAAE,CAAC,QAAR,uBACE,YAAK,GAAG,CAAC,wBAAT,CAAkC,GAAG,CAAC,oBAAtC,EADF,EA9BF,cAiCE,KAAC,cAAD,IAjCF,GADF,CAqCD,CAtCM,IAsCA,CACL,mBAAO,8CAAP,CACD,CACF,CA9VD,CAgWA,cAAeR,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"./App.css\";\nimport ConnectButton from \"./components/ConnectWallet\";\nimport DisconnectButton from \"./components/DisconnectWallet\";\nimport qrcode from \"qrcode-generator\";\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@material-ui/data-grid';\n\n\n\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 300 },\n  {\n    field: 'stock',\n    headerName: 'Stock',\n    width: 400,\n  },\n  {\n    field: 'price',\n    headerName: 'Price',\n    width: 400,\n\n  },\n  {\n    field: 'address',\n    headerName: 'NFT address',\n    width: 800,\n  },\n  {\n    field: 'admin',\n    headerName: 'admin',\n    width: 800\n\n  }\n];\n\nenum BeaconConnection {\n  NONE = \"\",\n  LISTENING = \"Listening to P2P channel\",\n  CONNECTED = \"Channel connected\",\n  PERMISSION_REQUEST_SENT = \"Permission request sent, waiting for response\",\n  PERMISSION_REQUEST_SUCCESS = \"Wallet is connected\"\n}\n\nconst App = () => {\n  const [Tezos, setTezos] = useState<TezosToolkit>(\n    new TezosToolkit(\"https://florencenet.api.tez.ie\")\n  );\n  const [contract, setContract] = useState<any>(undefined);\n  const [publicToken, setPublicToken] = useState<string | null>(\"\");\n  const [wallet, setWallet] = useState<any>(null);\n  const [userAddress, setUserAddress] = useState<string>(\"\");\n  const [userBalance, setUserBalance] = useState<number>(0);\n  const [storage, setStorage] = useState<any>();\n  const [copiedPublicToken, setCopiedPublicToken] = useState<boolean>(false);\n  const [beaconConnection, setBeaconConnection] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"buy\");\n  const [nftList, setNftList] = useState<[]>();\n  const [buyId, setBuyId] = useState<number>();\n  const [recoverId, setRecoverId] = useState<number>();\n  const [loadingBuy, setLoadingBuy] = useState<boolean>(false);\n  const [loadingRecover, setLoadingRecover] = useState<boolean>(false);\n  const [transactionInProgress, setTransactionInProgress] = useState(false);\n  const toastId: any = React.useRef(null);\n\n  // Florencenet contract\n  const contractAddress: string = \"KT1AMpeAQk8y1WHnRqJv1GkHLRfLPD1DS3Mi\";\n\n  const generateQrCode = (): { __html: string } => {\n    const qr = qrcode(0, \"L\");\n    qr.addData(publicToken || \"\");\n    qr.make();\n\n    return { __html: qr.createImgTag(4) };\n  };\n\n  useEffect(() => {\n      if (transactionInProgress && !toastId.current) {\n          toastId.current = toast.info(\n              'Transaction in progress. Confirm signing dialog and please wait...',\n              {\n                  position: 'top-right',\n                  autoClose: false,\n                  hideProgressBar: false,\n                  closeOnClick: false,\n                  pauseOnHover: true,\n                  draggable: true,\n                  progress: undefined,\n                  closeButton: false\n              }\n          );\n      } else if (!transactionInProgress && toastId.current) {\n          toast.dismiss(toastId.current);\n          toastId.current = null;\n      }\n  }, [transactionInProgress, toastId.current]);\n  \n  async function buy_nft(){\n\n      if (typeof buyId !== 'undefined' && buyId && nftList){\n\n        setLoadingBuy(true);\n        setTransactionInProgress(true);\n        \n        try {\n          const op = await contract.methods.buy(buyId).send(\n            {\n              amount: nftList[buyId].price\n            });\n\n          await op.confirmation();\n          const newStorage: any = await contract.storage();\n          if (newStorage) setStorage(newStorage);\n          let newNftList: any = [];\n          newStorage.forEach( (value: any, key: number, idx: any) => {\n            newNftList.push({id: key, stock:value.current_stock.toNumber(), price:value.token_price.toNumber() /1000000, address:value.token_address, admin: value.token_admin});\n          });\n          setNftList(newNftList);\n          setUserBalance(await Tezos.tz.getBalance(userAddress));\n          toast(\"Successfully bought nft\", {type:'success'});\n        } catch (error) {\n          console.log(error);\n          toast.error(\n            'There was an error sending your transaction. Please check developer console.'\n          );\n        } finally {\n          setLoadingBuy(false);\n          setTransactionInProgress(false);\n        }\n      }\n  }\n\n  async function recover_nft(){\n\n      if (typeof recoverId !== 'undefined' && recoverId){\n\n        setLoadingBuy(true);\n        setTransactionInProgress(true);\n\n        try {\n          const op = await contract.methods.recover(recoverId).send();\n\n          await op.confirmation();\n          const newStorage: any = await contract.storage();\n          if (newStorage) setStorage(newStorage);\n          let newNftList: any = [];\n          newStorage.forEach( (value: any, key: number, idx: any) => {\n            newNftList.push({id: key, stock:value.current_stock.toNumber(), price:value.token_price.toNumber() /1000000, address:value.token_address, admin: value.token_admin});\n          });\n          setNftList(newNftList);\n          setUserBalance(await Tezos.tz.getBalance(userAddress));\n          toast(\"Successfully recovered your nft\", {type:\"success\"});\n        } catch (error) {\n          console.log(error);\n          toast.error(\n            'There was an error sending your transaction. Please check developer console.'\n          );\n        } finally {\n          setTransactionInProgress(false);\n          setLoadingBuy(false);\n        }\n      }\n\n\n  }\n\n  if (publicToken && (!userAddress || isNaN(userBalance))) {\n    return (\n      <div>\n        <h1>Buy my NFTs on Tezos</h1>\n        <div id=\"dialog\">\n          <header>Welcome to this NFT DApp</header>\n          <div id=\"content\">\n            <p className=\"text-align-cent0er\">\n              <i className=\"fas fa-broadcast-tower\"></i>&nbsp; Connecting to\n              your wallet\n            </p>\n\n\n            <div\n              dangerouslySetInnerHTML={generateQrCode()}\n              className=\"text-align-center\"\n            ></div>\n\n\n            <p id=\"public-token\">\n              {copiedPublicToken ? (\n                <span id=\"public-token-copy__copied\">\n                  <i className=\"far fa-thumbs-up\"></i>\n                </span>\n              ) : (\n                <span\n                  id=\"public-token-copy\"\n                  onClick={() => {\n                    if (publicToken) {\n                      navigator.clipboard.writeText(publicToken);\n                      setCopiedPublicToken(true);\n                      setTimeout(() => setCopiedPublicToken(false), 2000);\n                    }\n                  }}\n                >\n                  <i className=\"far fa-copy\"></i>\n                </span>\n              )}\n\n              <span>\n                Public token: <span>{publicToken}</span>\n              </span>\n            </p>\n\n\n\n            <p className=\"text-align-center\">\n              Status: {beaconConnection ? \"Connected\" : \"Disconnected\"}\n            </p>\n          </div>\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else if (userAddress && !isNaN(userBalance)) {\n\n    return (\n      <div>\n        <h1>Buy my NFTs on Tezos</h1>\n        <div id=\"tabs\">\n\n          <div\n            id=\"buy\"\n            className={activeTab === \"buy\" ? \"active\" : \"\"}\n            onClick={() => setActiveTab(\"buy\")}\n          >\n            Buy NFT\n          </div>\n        </div>\n\n\n\n        <div>\n          <div style={{height:400, width: '90%'}}>\n            <DataGrid\n              rows={nftList}\n              columns={columns}\n              pageSize={100}\n            />\n\n          </div>\n            \n            <div style={{width: '90%'}}>\n              &nbsp;\n               <br/>\n               <br/>\n               <br/>\n              &nbsp;<span> Enter Nft ID to buy </span>\n               <br/>\n               <br/>\n              &nbsp;<input\n                type=\"number\"\n                placeholder=\"NFT ID\"\n                value={buyId}\n                onChange={e => setBuyId(parseInt(e.target.value,10))}\n              />\n              &nbsp;<button \n                className=\"button\" \n                onClick={buy_nft}\n              >\n                {loadingBuy ? (\n                  <span>\n                    <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n                  </span>\n                ) : (\n                  <span>\n                    <i className=\"fas fa-plus\"></i>&nbsp; Buy NFT\n                  </span>\n                )}\n              </button>\n            </div>\n\n            <div style={{width: '90%'}}>\n              &nbsp;\n               <br/>\n               <br/>\n               <br/>\n              &nbsp;<span> Enter Nft ID to recover </span>\n               <br/>\n               <br/>\n              &nbsp;<input\n                type=\"number\"\n                placeholder=\"NFT ID\"\n                value={recoverId}\n                onChange={e => setRecoverId(parseInt(e.target.value,10))}\n              />\n              &nbsp;<button \n                className=\"button\" \n                onClick={recover_nft}\n              >\n                {loadingRecover ? (\n                  <span>\n                    <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n                  </span>\n                ) : (\n                  <span>\n                    <i className=\"fas fa-plus\"></i>&nbsp; Recover NFT\n                  </span>\n                )}\n              </button>\n\n            </div>\n\n\n\n          </div>\n\n\n\n            <p>\n              &nbsp;<i className=\"far fa-file-code\"></i>&nbsp;\n              <a\n                href={`https://better-call.dev/florencenet/${contractAddress}/operations`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {contractAddress}\n              </a>\n            </p>\n\n            <p>\n              &nbsp;<i className=\"far fa-address-card\"></i>&nbsp; {userAddress}\n            </p>\n\n            <p>\n              &nbsp;<i className=\"fas fa-piggy-bank\"></i>&nbsp;\n              {(userBalance / 1000000).toLocaleString(\"en-US\")} ꜩ\n            </p>\n\n\n          <DisconnectButton\n            wallet={wallet}\n            setPublicToken={setPublicToken}\n            setUserAddress={setUserAddress}\n            setUserBalance={setUserBalance}\n            setWallet={setWallet}\n            setTezos={setTezos}\n            setBeaconConnection={setBeaconConnection}\n          />\n\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else if (!publicToken && !userAddress && !userBalance) {\n    return (\n      <div>\n        <div className=\"title\">\n          <h1>Buy my NFTs on Tezos</h1>\n          <a href=\"https://app.netlify.com/start/deploy?repository=https://github.com/ecadlabs/taquito-boilerplate\">\n            <img\n              src=\"https://www.netlify.com/img/deploy/button.svg\"\n              alt=\"netlify-button\"\n            />\n          </a>\n        </div>\n        <div id=\"dialog\">\n          <header>Welcome to this NFT DApp</header>\n          <div id=\"content\">\n            <p>Hello!</p>\n            <p>Go forth and Tezos!</p>\n          </div>\n          <ConnectButton\n            Tezos={Tezos}\n            setContract={setContract}\n            setPublicToken={setPublicToken}\n            setWallet={setWallet}\n            setUserAddress={setUserAddress}\n            setUserBalance={setUserBalance}\n            setStorage={setStorage}\n            setNftList={setNftList}\n            contractAddress={contractAddress}\n            setBeaconConnection={setBeaconConnection}\n            wallet={wallet}\n          />\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n        <ToastContainer />\n      </div>\n    );\n  } else {\n    return <div>An error has occurred</div>;\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}