{"ast":null,"code":"var _jsxFileName = \"/opt/tezos/nft-shop-example/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { toast } from 'react-toastify';\nimport \"./App.css\";\nimport ConnectButton from \"./components/ConnectWallet\";\nimport DisconnectButton from \"./components/DisconnectWallet\";\nimport qrcode from \"qrcode-generator\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 300\n}, {\n  field: 'stock',\n  headerName: 'Stock',\n  width: 400\n}, {\n  field: 'price',\n  headerName: 'Price',\n  width: 400\n}, {\n  field: 'address',\n  headerName: 'NFT address',\n  width: 800\n}, {\n  field: 'admin',\n  headerName: 'admin',\n  width: 800\n}];\nvar BeaconConnection;\n\n(function (BeaconConnection) {\n  BeaconConnection[\"NONE\"] = \"\";\n  BeaconConnection[\"LISTENING\"] = \"Listening to P2P channel\";\n  BeaconConnection[\"CONNECTED\"] = \"Channel connected\";\n  BeaconConnection[\"PERMISSION_REQUEST_SENT\"] = \"Permission request sent, waiting for response\";\n  BeaconConnection[\"PERMISSION_REQUEST_SUCCESS\"] = \"Wallet is connected\";\n})(BeaconConnection || (BeaconConnection = {}));\n\nconst App = () => {\n  _s();\n\n  const [Tezos, setTezos] = useState(new TezosToolkit(\"https://florencenet.api.tez.ie\"));\n  const [contract, setContract] = useState(undefined);\n  const [publicToken, setPublicToken] = useState(\"\");\n  const [wallet, setWallet] = useState(null);\n  const [userAddress, setUserAddress] = useState(\"\");\n  const [userBalance, setUserBalance] = useState(0);\n  const [storage, setStorage] = useState();\n  const [copiedPublicToken, setCopiedPublicToken] = useState(false);\n  const [beaconConnection, setBeaconConnection] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"buy\");\n  const [nftList, setNftList] = useState([]);\n  const [buyId, setBuyId] = useState();\n  const [recoverId, setRecoverId] = useState();\n  const [loadingBuy, setLoadingBuy] = useState(false);\n  const [loadingRecover, setLoadingRecover] = useState(false); // Florencenet contract\n\n  const contractAddress = \"KT1AMpeAQk8y1WHnRqJv1GkHLRfLPD1DS3Mi\";\n\n  const generateQrCode = () => {\n    const qr = qrcode(0, \"L\");\n    qr.addData(publicToken || \"\");\n    qr.make();\n    return {\n      __html: qr.createImgTag(4)\n    };\n  };\n\n  async function buy_nft() {\n    setLoadingBuy(true);\n    setTransactionInProgress(true);\n\n    try {\n      const op = await contract.methods.buy(id).send({\n        amount: nftList[id].price\n      });\n      await op.confirmation();\n      const newStorage = await contract.storage();\n      if (newStorage) setStorage(newStorage);\n      let newNftList = [];\n      newStorage.forEach((value, key, idx) => {\n        newNftList.push({\n          id: key,\n          stock: value.current_stock.toNumber(),\n          price: value.token_price.toNumber() / 1000000,\n          address: value.token_address,\n          admin: value.token_admin\n        });\n      });\n      setNftList(newNftList);\n      setUserBalance(await Tezos.tz.getBalance(userAddress));\n      toast(\"Successfully bought nft\", {\n        type: 'success'\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error('There was an error sending your transaction. Please check developer console.');\n    } finally {\n      setLoadingBuy(false);\n      setTransactionInProgress(false);\n    }\n  }\n\n  async function recover_nft() {\n    setLoadingBuy(true);\n    setTransactionInProgress(true);\n\n    try {\n      const op = await contract.methods.recover(id).send();\n      await op.confirmation();\n      const newStorage = await contract.storage();\n      if (newStorage) setStorage(newStorage);\n      let newNftList = [];\n      newStorage.forEach((value, key, idx) => {\n        newNftList.push({\n          id: key,\n          stock: value.current_stock.toNumber(),\n          price: value.token_price.toNumber() / 1000000,\n          address: value.token_address,\n          admin: value.token_admin\n        });\n      });\n      setNftList(newNftList);\n      setUserBalance(await Tezos.tz.getBalance(userAddress));\n      toast(\"Successfully recovered your nft\", {\n        type: \"success\"\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error('There was an error sending your transaction. Please check developer console.');\n    } finally {\n      setTransactionInProgress(false);\n      setLoadingBuy(false);\n    }\n  }\n\n  if (publicToken && (!userAddress || isNaN(userBalance))) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Buy my NFTs on Tezos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Welcome to this NFT DApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-align-cent0er\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-broadcast-tower\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), \"\\xA0 Connecting to your wallet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: generateQrCode(),\n            className: \"text-align-center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"public-token\",\n            children: [copiedPublicToken ? /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"public-token-copy__copied\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-thumbs-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"public-token-copy\",\n              onClick: () => {\n                if (publicToken) {\n                  navigator.clipboard.writeText(publicToken);\n                  setCopiedPublicToken(true);\n                  setTimeout(() => setCopiedPublicToken(false), 2000);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Public token: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: publicToken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-align-center\",\n            children: [\"Status: \", beaconConnection ? \"Connected\" : \"Disconnected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"built-with-taquito.png\",\n          alt: \"Built with Taquito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  } else if (userAddress && !isNaN(userBalance)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Buy my NFTs on Tezos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tabs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buy\",\n          className: activeTab === \"buy\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"buy\"),\n          children: \"Buy NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 400,\n            width: '90%'\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: nftList,\n            columns: columns,\n            pageSize: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '90%'\n          },\n          children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 16\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Enter Nft ID to buy \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 16\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"NFT ID\",\n            value: buyId,\n            onChange: e => setId(parseInt(e.target.value, 10))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 21\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: buy_nft,\n            children: loadingBuy ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-spinner fa-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this), \"\\xA0 Please wait\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this), \"\\xA0 Buy NFT\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '90%'\n          },\n          children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 16\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Enter Nft ID to recover \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 16\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"NFT ID\",\n            value: recoverId,\n            onChange: e => setRecoverId(parseInt(e.target.value, 10))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 21\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: recover_nft,\n            children: loadingBuy ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-spinner fa-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), \"\\xA0 Please wait\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), \"\\xA0 Recover NFT\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"far fa-file-code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://better-call.dev/florencenet/${contractAddress}/operations`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: contractAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"far fa-address-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 21\n        }, this), \"\\xA0 \", userAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-piggy-bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 21\n        }, this), \"\\xA0\", (userBalance / 1000000).toLocaleString(\"en-US\"), \" \\uA729\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisconnectButton, {\n        wallet: wallet,\n        setPublicToken: setPublicToken,\n        setUserAddress: setUserAddress,\n        setUserBalance: setUserBalance,\n        setWallet: setWallet,\n        setTezos: setTezos,\n        setBeaconConnection: setBeaconConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"built-with-taquito.png\",\n          alt: \"Built with Taquito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this);\n  } else if (!publicToken && !userAddress && !userBalance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Buy my NFTs on Tezos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://app.netlify.com/start/deploy?repository=https://github.com/ecadlabs/taquito-boilerplate\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://www.netlify.com/img/deploy/button.svg\",\n            alt: \"netlify-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Welcome to this NFT DApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hello!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Go forth and Tezos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n          Tezos: Tezos,\n          setContract: setContract,\n          setPublicToken: setPublicToken,\n          setWallet: setWallet,\n          setUserAddress: setUserAddress,\n          setUserBalance: setUserBalance,\n          setStorage: setStorage,\n          setNftList: setNftList,\n          contractAddress: contractAddress,\n          setBeaconConnection: setBeaconConnection,\n          wallet: wallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"built-with-taquito.png\",\n          alt: \"Built with Taquito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error has occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(App, \"64wQwCeAsu66cJ3lxWdquOyw67U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/opt/tezos/nft-shop-example/src/App.tsx"],"names":["React","useState","TezosToolkit","toast","ConnectButton","DisconnectButton","qrcode","DataGrid","columns","field","headerName","width","BeaconConnection","App","Tezos","setTezos","contract","setContract","undefined","publicToken","setPublicToken","wallet","setWallet","userAddress","setUserAddress","userBalance","setUserBalance","storage","setStorage","copiedPublicToken","setCopiedPublicToken","beaconConnection","setBeaconConnection","activeTab","setActiveTab","nftList","setNftList","buyId","setBuyId","recoverId","setRecoverId","loadingBuy","setLoadingBuy","loadingRecover","setLoadingRecover","contractAddress","generateQrCode","qr","addData","make","__html","createImgTag","buy_nft","setTransactionInProgress","op","methods","buy","id","send","amount","price","confirmation","newStorage","newNftList","forEach","value","key","idx","push","stock","current_stock","toNumber","token_price","address","token_address","admin","token_admin","tz","getBalance","type","error","console","log","recover_nft","recover","isNaN","navigator","clipboard","writeText","setTimeout","height","e","setId","parseInt","target","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"./App.css\";\nimport ConnectButton from \"./components/ConnectWallet\";\nimport DisconnectButton from \"./components/DisconnectWallet\";\nimport qrcode from \"qrcode-generator\";\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@material-ui/data-grid';\n\n\n\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 300 },\n  {\n    field: 'stock',\n    headerName: 'Stock',\n    width: 400,\n  },\n  {\n    field: 'price',\n    headerName: 'Price',\n    width: 400,\n\n  },\n  {\n    field: 'address',\n    headerName: 'NFT address',\n    width: 800,\n  },\n  {\n    field: 'admin',\n    headerName: 'admin',\n    width: 800\n\n  }\n];\n\nenum BeaconConnection {\n  NONE = \"\",\n  LISTENING = \"Listening to P2P channel\",\n  CONNECTED = \"Channel connected\",\n  PERMISSION_REQUEST_SENT = \"Permission request sent, waiting for response\",\n  PERMISSION_REQUEST_SUCCESS = \"Wallet is connected\"\n}\n\nconst App = () => {\n  const [Tezos, setTezos] = useState<TezosToolkit>(\n    new TezosToolkit(\"https://florencenet.api.tez.ie\")\n  );\n  const [contract, setContract] = useState<any>(undefined);\n  const [publicToken, setPublicToken] = useState<string | null>(\"\");\n  const [wallet, setWallet] = useState<any>(null);\n  const [userAddress, setUserAddress] = useState<string>(\"\");\n  const [userBalance, setUserBalance] = useState<number>(0);\n  const [storage, setStorage] = useState<any>();\n  const [copiedPublicToken, setCopiedPublicToken] = useState<boolean>(false);\n  const [beaconConnection, setBeaconConnection] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"buy\");\n  const [nftList, setNftList] = useState<[]>([]);\n  const [buyId, setBuyId] = useState<number>();\n  const [recoverId, setRecoverId] = useState<number>();\n  const [loadingBuy, setLoadingBuy] = useState<boolean>(false);\n  const [loadingRecover, setLoadingRecover] = useState<boolean>(false);\n\n  // Florencenet contract\n  const contractAddress: string = \"KT1AMpeAQk8y1WHnRqJv1GkHLRfLPD1DS3Mi\";\n\n  const generateQrCode = (): { __html: string } => {\n    const qr = qrcode(0, \"L\");\n    qr.addData(publicToken || \"\");\n    qr.make();\n\n    return { __html: qr.createImgTag(4) };\n  };\n\n  async function buy_nft(){\n      setLoadingBuy(true);\n      setTransactionInProgress(true);\n      try {\n        const op = await contract.methods.buy(id).send(\n          {\n            amount: nftList[id].price\n          });\n\n        await op.confirmation();\n        const newStorage: any = await contract.storage();\n        if (newStorage) setStorage(newStorage);\n        let newNftList: any = [];\n        newStorage.forEach( (value: any, key: number, idx: any) => {\n          newNftList.push({id: key, stock:value.current_stock.toNumber(), price:value.token_price.toNumber() /1000000, address:value.token_address, admin: value.token_admin});\n        });\n        setNftList(newNftList);\n        setUserBalance(await Tezos.tz.getBalance(userAddress));\n        toast(\"Successfully bought nft\", {type:'success'});\n      } catch (error) {\n        console.log(error);\n        toast.error(\n          'There was an error sending your transaction. Please check developer console.'\n        );\n      } finally {\n        setLoadingBuy(false);\n        setTransactionInProgress(false);\n      }\n  }\n\n  async function recover_nft(){\n      setLoadingBuy(true);\n      setTransactionInProgress(true);\n      try {\n        const op = await contract.methods.recover(id).send();\n\n        await op.confirmation();\n        const newStorage: any = await contract.storage();\n        if (newStorage) setStorage(newStorage);\n        let newNftList: any = [];\n        newStorage.forEach( (value: any, key: number, idx: any) => {\n          newNftList.push({id: key, stock:value.current_stock.toNumber(), price:value.token_price.toNumber() /1000000, address:value.token_address, admin: value.token_admin});\n        });\n        setNftList(newNftList);\n        setUserBalance(await Tezos.tz.getBalance(userAddress));\n        toast(\"Successfully recovered your nft\", {type:\"success\"});\n      } catch (error) {\n        console.log(error);\n        toast.error(\n          'There was an error sending your transaction. Please check developer console.'\n        );\n      } finally {\n        setTransactionInProgress(false);\n        setLoadingBuy(false);\n      }\n\n\n  }\n\n  if (publicToken && (!userAddress || isNaN(userBalance))) {\n    return (\n      <div>\n        <h1>Buy my NFTs on Tezos</h1>\n        <div id=\"dialog\">\n          <header>Welcome to this NFT DApp</header>\n          <div id=\"content\">\n            <p className=\"text-align-cent0er\">\n              <i className=\"fas fa-broadcast-tower\"></i>&nbsp; Connecting to\n              your wallet\n            </p>\n\n\n            <div\n              dangerouslySetInnerHTML={generateQrCode()}\n              className=\"text-align-center\"\n            ></div>\n\n\n            <p id=\"public-token\">\n              {copiedPublicToken ? (\n                <span id=\"public-token-copy__copied\">\n                  <i className=\"far fa-thumbs-up\"></i>\n                </span>\n              ) : (\n                <span\n                  id=\"public-token-copy\"\n                  onClick={() => {\n                    if (publicToken) {\n                      navigator.clipboard.writeText(publicToken);\n                      setCopiedPublicToken(true);\n                      setTimeout(() => setCopiedPublicToken(false), 2000);\n                    }\n                  }}\n                >\n                  <i className=\"far fa-copy\"></i>\n                </span>\n              )}\n\n              <span>\n                Public token: <span>{publicToken}</span>\n              </span>\n            </p>\n\n\n\n            <p className=\"text-align-center\">\n              Status: {beaconConnection ? \"Connected\" : \"Disconnected\"}\n            </p>\n          </div>\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else if (userAddress && !isNaN(userBalance)) {\n\n    return (\n      <div>\n        <h1>Buy my NFTs on Tezos</h1>\n        <div id=\"tabs\">\n\n          <div\n            id=\"buy\"\n            className={activeTab === \"buy\" ? \"active\" : \"\"}\n            onClick={() => setActiveTab(\"buy\")}\n          >\n            Buy NFT\n          </div>\n        </div>\n\n\n\n        <div>\n          <div style={{height:400, width: '90%'}}>\n            <DataGrid\n              rows={nftList}\n              columns={columns}\n              pageSize={100}\n            />\n\n          </div>\n            \n            <div style={{width: '90%'}}>\n              &nbsp;\n               <br/>\n               <br/>\n               <br/>\n              &nbsp;<span> Enter Nft ID to buy </span>\n               <br/>\n               <br/>\n              &nbsp;<input\n                type=\"number\"\n                placeholder=\"NFT ID\"\n                value={buyId}\n                onChange={e => setId(parseInt(e.target.value,10))}\n              />\n              &nbsp;<button \n                className=\"button\" \n                onClick={buy_nft}\n              >\n                {loadingBuy ? (\n                  <span>\n                    <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n                  </span>\n                ) : (\n                  <span>\n                    <i className=\"fas fa-plus\"></i>&nbsp; Buy NFT\n                  </span>\n                )}\n              </button>\n            </div>\n\n            <div style={{width: '90%'}}>\n              &nbsp;\n               <br/>\n               <br/>\n               <br/>\n              &nbsp;<span> Enter Nft ID to recover </span>\n               <br/>\n               <br/>\n              &nbsp;<input\n                type=\"number\"\n                placeholder=\"NFT ID\"\n                value={recoverId}\n                onChange={e => setRecoverId(parseInt(e.target.value,10))}\n              />\n              &nbsp;<button \n                className=\"button\" \n                onClick={recover_nft}\n              >\n                {loadingBuy ? (\n                  <span>\n                    <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n                  </span>\n                ) : (\n                  <span>\n                    <i className=\"fas fa-plus\"></i>&nbsp; Recover NFT\n                  </span>\n                )}\n              </button>\n\n            </div>\n\n\n\n          </div>\n\n\n\n            <p>\n              &nbsp;<i className=\"far fa-file-code\"></i>&nbsp;\n              <a\n                href={`https://better-call.dev/florencenet/${contractAddress}/operations`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {contractAddress}\n              </a>\n            </p>\n\n            <p>\n              &nbsp;<i className=\"far fa-address-card\"></i>&nbsp; {userAddress}\n            </p>\n\n            <p>\n              &nbsp;<i className=\"fas fa-piggy-bank\"></i>&nbsp;\n              {(userBalance / 1000000).toLocaleString(\"en-US\")} ꜩ\n            </p>\n\n\n          <DisconnectButton\n            wallet={wallet}\n            setPublicToken={setPublicToken}\n            setUserAddress={setUserAddress}\n            setUserBalance={setUserBalance}\n            setWallet={setWallet}\n            setTezos={setTezos}\n            setBeaconConnection={setBeaconConnection}\n          />\n\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else if (!publicToken && !userAddress && !userBalance) {\n    return (\n      <div>\n        <div className=\"title\">\n          <h1>Buy my NFTs on Tezos</h1>\n          <a href=\"https://app.netlify.com/start/deploy?repository=https://github.com/ecadlabs/taquito-boilerplate\">\n            <img\n              src=\"https://www.netlify.com/img/deploy/button.svg\"\n              alt=\"netlify-button\"\n            />\n          </a>\n        </div>\n        <div id=\"dialog\">\n          <header>Welcome to this NFT DApp</header>\n          <div id=\"content\">\n            <p>Hello!</p>\n            <p>Go forth and Tezos!</p>\n          </div>\n          <ConnectButton\n            Tezos={Tezos}\n            setContract={setContract}\n            setPublicToken={setPublicToken}\n            setWallet={setWallet}\n            setUserAddress={setUserAddress}\n            setUserBalance={setUserBalance}\n            setStorage={setStorage}\n            setNftList={setNftList}\n            contractAddress={contractAddress}\n            setBeaconConnection={setBeaconConnection}\n            wallet={wallet}\n          />\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else {\n    return <div>An error has occurred</div>;\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}