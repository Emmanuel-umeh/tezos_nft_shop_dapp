{"ast":null,"code":"var _jsxFileName = \"/opt/tezos/nft-shop-example/src/components/NFT_List.tsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NFT_Member extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: props.id\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"current stock: \", this.props.storage.get(id.toString())[\"current_stock\"].toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"token price: \", this.props.storage.get(id.toString())[\"token_price\"].toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"token address: \", this.props.storage.get(id.toString())[\"token_address\"].toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nclass NFT_List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      storage: props.storage\n    };\n  }\n\n  render() {\n    const Fragment = React.Fragment;\n    var my_nft_list;\n\n    if (this.props.storage) {\n      for (let id = 0;; id++) {\n        if (!this.props.storage.get(id)) break;\n        my_nft_list.push( /*#__PURE__*/_jsxDEV(NFT_Member, {\n          id: id,\n          storage: storage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }, this));\n      }\n\n      return my_nft_list;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"None\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default NFT_List;","map":{"version":3,"sources":["/opt/tezos/nft-shop-example/src/components/NFT_List.tsx"],"names":["React","Component","NFT_Member","constructor","props","state","id","render","storage","get","toString","NFT_List","Fragment","my_nft_list","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAQA,MAAMC,UAAN,SAAyBD,SAAzB,CAAoD;AAElDE,EAAAA,WAAW,CAACC,KAAD,EAAyB;AAClC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAEF,KAAK,CAACE;AADC,KAAb;AAID;;AAEDC,EAAAA,MAAM,GAAI;AACR,wBACI;AAAA,8BACE;AAAA,+BACC;AAAA,wCACmB,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuBH,EAAE,CAACI,QAAH,EAAvB,EAAsC,eAAtC,EAAuDA,QAAvD,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,+BACE;AAAA,sCACgB,KAAKN,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuBH,EAAE,CAACI,QAAH,EAAvB,EAAsC,aAAtC,EAAqDA,QAArD,EADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAA,+BACE;AAAA,wCACkB,KAAKN,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuBH,EAAE,CAACI,QAAH,EAAvB,EAAsC,eAAtC,EAAuDA,QAAvD,EADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBC;;AA/B+C;;AAkCpD,MAAMC,QAAN,SAAuBV,SAAvB,CAA+D;AAE3DE,EAAAA,WAAW,CAACC,KAAD,EAAwB;AAC/B,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXG,MAAAA,OAAO,EAAEJ,KAAK,CAACI;AADJ,KAAb;AAGH;;AAEDD,EAAAA,MAAM,GAAG;AACP,UAAMK,QAAQ,GAAGZ,KAAK,CAACY,QAAvB;AAEA,QAAIC,WAAJ;;AACA,QAAI,KAAKT,KAAL,CAAWI,OAAf,EAAuB;AACrB,WAAI,IAAIF,EAAE,GAAC,CAAX,GAAcA,EAAE,EAAhB,EAAoB;AAClB,YAAG,CAAC,KAAKF,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuBH,EAAvB,CAAJ,EAAgC;AAChCO,QAAAA,WAAW,CAACC,IAAZ,eAAiB,QAAC,UAAD;AAAY,UAAA,EAAE,EAAER,EAAhB;AAAoB,UAAA,OAAO,EAAEE;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAAjB;AACD;;AACD,aAAOK,WAAP;AAED,KAPD,MAOO;AACL,0BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;AACF;;AA9B0D;;AAiC/D,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\n\ninterface nft_list_props {\n  storage: any;\n}\ninterface nft_member_props {\n  id: number;\n}\nclass NFT_Member extends Component<nft_member_props>{\n\n  constructor(props: nft_member_props){\n    super(props);\n    this.state = {\n      id: props.id\n    };\n\n  }\n\n  render () {\n    return (\n        <div>\n          <li>\n           <span> \n              current stock: {this.props.storage.get(id.toString())[\"current_stock\"].toString()} \n           </span>\n          </li>\n          <li>\n            <span>\n              token price: {this.props.storage.get(id.toString())[\"token_price\"].toString()}\n            </span>\n          </li>\n          <li>\n            <span>\n              token address: {this.props.storage.get(id.toString())[\"token_address\"].toString()}\n            </span>\n          </li>\n\n        </div>\n        )\n    }\n\n}\nclass NFT_List extends Component<nft_list_props,nft_list_props>{\n\n    constructor(props: nft_list_props) {\n        super(props);\n        this.state = {\n          storage: props.storage\n        };\n    }\n\n    render() {\n      const Fragment = React.Fragment;\n\n      var my_nft_list;\n      if (this.props.storage){\n        for(let id=0;;id++) {\n          if(!this.props.storage.get(id)) break;\n          my_nft_list.push(<NFT_Member id={id} storage={storage}/>);\n        }\n        return my_nft_list;\n\n      } else {\n        return (\n          <div>\n            <span>\n              None\n            </span>\n          </div>\n          );\n\n      }\n    }\n}\n\nexport default NFT_List; "]},"metadata":{},"sourceType":"module"}