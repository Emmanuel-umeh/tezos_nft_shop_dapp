{"ast":null,"code":"var _jsxFileName = \"/opt/tezos/nft-shop-example/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport \"./App.css\";\nimport ConnectButton from \"./components/ConnectWallet\";\nimport DisconnectButton from \"./components/DisconnectWallet\";\nimport qrcode from \"qrcode-generator\";\nimport RecoverNFT from \"./components/RecoverNFT\";\nimport { DataGrid } from '@material-ui/data-grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 300\n}, {\n  field: 'stock',\n  headerName: 'Stock',\n  width: 400\n}, {\n  field: 'price',\n  headerName: 'Price',\n  width: 400\n}, {\n  field: 'address',\n  headerName: 'NFT address',\n  width: 800\n}, {\n  field: 'admin',\n  headerName: 'admin',\n  width: 800\n}];\nvar BeaconConnection;\n\n(function (BeaconConnection) {\n  BeaconConnection[\"NONE\"] = \"\";\n  BeaconConnection[\"LISTENING\"] = \"Listening to P2P channel\";\n  BeaconConnection[\"CONNECTED\"] = \"Channel connected\";\n  BeaconConnection[\"PERMISSION_REQUEST_SENT\"] = \"Permission request sent, waiting for response\";\n  BeaconConnection[\"PERMISSION_REQUEST_SUCCESS\"] = \"Wallet is connected\";\n})(BeaconConnection || (BeaconConnection = {}));\n\nconst App = () => {\n  _s();\n\n  const [Tezos, setTezos] = useState(new TezosToolkit(\"https://florencenet.api.tez.ie\"));\n  const [contract, setContract] = useState(undefined);\n  const [publicToken, setPublicToken] = useState(\"\");\n  const [wallet, setWallet] = useState(null);\n  const [userAddress, setUserAddress] = useState(\"\");\n  const [userBalance, setUserBalance] = useState(0);\n  const [storage, setStorage] = useState();\n  const [copiedPublicToken, setCopiedPublicToken] = useState(false);\n  const [beaconConnection, setBeaconConnection] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"buy\");\n  const [nftList, setNftList] = useState([]);\n  const [buyId, setBuyId] = useState();\n  const [recoverId, setRecoverId] = useState(); // Florencenet contract\n\n  const contractAddress = \"KT1AMpeAQk8y1WHnRqJv1GkHLRfLPD1DS3Mi\";\n\n  const generateQrCode = () => {\n    const qr = qrcode(0, \"L\");\n    qr.addData(publicToken || \"\");\n    qr.make();\n    return {\n      __html: qr.createImgTag(4)\n    };\n  };\n\n  async function buy_nft() {}\n\n  if (publicToken && (!userAddress || isNaN(userBalance))) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Buy my NFTs on Tezos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Welcome to this NFT DApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-align-cent0er\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-broadcast-tower\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), \"\\xA0 Connecting to your wallet\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: generateQrCode(),\n            className: \"text-align-center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"public-token\",\n            children: [copiedPublicToken ? /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"public-token-copy__copied\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-thumbs-up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"public-token-copy\",\n              onClick: () => {\n                if (publicToken) {\n                  navigator.clipboard.writeText(publicToken);\n                  setCopiedPublicToken(true);\n                  setTimeout(() => setCopiedPublicToken(false), 2000);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"far fa-copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Public token: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: publicToken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-align-center\",\n            children: [\"Status: \", beaconConnection ? \"Connected\" : \"Disconnected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"built-with-taquito.png\",\n          alt: \"Built with Taquito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  } else if (userAddress && !isNaN(userBalance)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Buy my NFTs on Tezos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"tabs\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buy\",\n          className: activeTab === \"buy\" ? \"active\" : \"\",\n          onClick: () => setActiveTab(\"buy\"),\n          children: \"Buy NFT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: 400,\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(DataGrid, {\n            rows: nftList,\n            columns: columns,\n            pageSize: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 14\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Enter Nft ID to buy \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 14\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"NFT ID\",\n            value: buyId,\n            onChange: e => setId(parseInt(e.target.value, 10))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: buy_nft,\n            children: loadingBuy ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-spinner fa-spin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this), \"\\xA0 Please wait\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), \"\\xA0 Buy NFT\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecoverNFT, {\n          contract: contract,\n          setUserBalance: setUserBalance,\n          Tezos: Tezos,\n          userAddress: userAddress,\n          setStorage: setStorage,\n          setNftList: setNftList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"far fa-file-code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `https://better-call.dev/florencenet/${contractAddress}/operations`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: contractAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"far fa-address-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this), \"\\xA0 \", userAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-piggy-bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), \"\\xA0\", (userBalance / 1000000).toLocaleString(\"en-US\"), \" \\uA729\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DisconnectButton, {\n        wallet: wallet,\n        setPublicToken: setPublicToken,\n        setUserAddress: setUserAddress,\n        setUserBalance: setUserBalance,\n        setWallet: setWallet,\n        setTezos: setTezos,\n        setBeaconConnection: setBeaconConnection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"built-with-taquito.png\",\n          alt: \"Built with Taquito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  } else if (!publicToken && !userAddress && !userBalance) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Buy my NFTs on Tezos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://app.netlify.com/start/deploy?repository=https://github.com/ecadlabs/taquito-boilerplate\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://www.netlify.com/img/deploy/button.svg\",\n            alt: \"netlify-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Welcome to this NFT DApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hello!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Go forth and Tezos!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConnectButton, {\n          Tezos: Tezos,\n          setContract: setContract,\n          setPublicToken: setPublicToken,\n          setWallet: setWallet,\n          setUserAddress: setUserAddress,\n          setUserBalance: setUserBalance,\n          setStorage: setStorage,\n          setNftList: setNftList,\n          contractAddress: contractAddress,\n          setBeaconConnection: setBeaconConnection,\n          wallet: wallet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"footer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"built-with-taquito.png\",\n          alt: \"Built with Taquito\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error has occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(App, \"AztDdCl7pv2zEGJkBjXeY7hEYsc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/opt/tezos/nft-shop-example/src/App.tsx"],"names":["React","useState","TezosToolkit","ConnectButton","DisconnectButton","qrcode","RecoverNFT","DataGrid","columns","field","headerName","width","BeaconConnection","App","Tezos","setTezos","contract","setContract","undefined","publicToken","setPublicToken","wallet","setWallet","userAddress","setUserAddress","userBalance","setUserBalance","storage","setStorage","copiedPublicToken","setCopiedPublicToken","beaconConnection","setBeaconConnection","activeTab","setActiveTab","nftList","setNftList","buyId","setBuyId","recoverId","setRecoverId","contractAddress","generateQrCode","qr","addData","make","__html","createImgTag","buy_nft","isNaN","navigator","clipboard","writeText","setTimeout","height","e","setId","parseInt","target","value","loadingBuy","toLocaleString"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TezosToolkit } from \"@taquito/taquito\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport \"./App.css\";\nimport ConnectButton from \"./components/ConnectWallet\";\nimport DisconnectButton from \"./components/DisconnectWallet\";\nimport qrcode from \"qrcode-generator\";\nimport UpdateContract from \"./components/UpdateContract\";\n// import Transfers from \"./components/Transfers\";\nimport BuyNFT from \"./components/BuyNFT\"; \nimport RecoverNFT from \"./components/RecoverNFT\";\nimport { DataGrid, GridColDef, GridValueGetterParams } from '@material-ui/data-grid';\n\n\n\n\nconst columns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', width: 300 },\n  {\n    field: 'stock',\n    headerName: 'Stock',\n    width: 400,\n  },\n  {\n    field: 'price',\n    headerName: 'Price',\n    width: 400,\n\n  },\n  {\n    field: 'address',\n    headerName: 'NFT address',\n    width: 800,\n  },\n  {\n    field: 'admin',\n    headerName: 'admin',\n    width: 800\n\n  }\n];\n\nenum BeaconConnection {\n  NONE = \"\",\n  LISTENING = \"Listening to P2P channel\",\n  CONNECTED = \"Channel connected\",\n  PERMISSION_REQUEST_SENT = \"Permission request sent, waiting for response\",\n  PERMISSION_REQUEST_SUCCESS = \"Wallet is connected\"\n}\n\nconst App = () => {\n  const [Tezos, setTezos] = useState<TezosToolkit>(\n    new TezosToolkit(\"https://florencenet.api.tez.ie\")\n  );\n  const [contract, setContract] = useState<any>(undefined);\n  const [publicToken, setPublicToken] = useState<string | null>(\"\");\n  const [wallet, setWallet] = useState<any>(null);\n  const [userAddress, setUserAddress] = useState<string>(\"\");\n  const [userBalance, setUserBalance] = useState<number>(0);\n  const [storage, setStorage] = useState<any>();\n  const [copiedPublicToken, setCopiedPublicToken] = useState<boolean>(false);\n  const [beaconConnection, setBeaconConnection] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"buy\");\n  const [nftList, setNftList] = useState<[]>([]);\n  const [buyId, setBuyId] = useState<number>();\n  const [recoverId, setRecoverId] = useState<number>();\n\n  // Florencenet contract\n  const contractAddress: string = \"KT1AMpeAQk8y1WHnRqJv1GkHLRfLPD1DS3Mi\";\n\n  const generateQrCode = (): { __html: string } => {\n    const qr = qrcode(0, \"L\");\n    qr.addData(publicToken || \"\");\n    qr.make();\n\n    return { __html: qr.createImgTag(4) };\n  };\n\n  async function buy_nft(){\n\n\n\n\n  }\n\n  if (publicToken && (!userAddress || isNaN(userBalance))) {\n    return (\n      <div>\n        <h1>Buy my NFTs on Tezos</h1>\n        <div id=\"dialog\">\n          <header>Welcome to this NFT DApp</header>\n          <div id=\"content\">\n            <p className=\"text-align-cent0er\">\n              <i className=\"fas fa-broadcast-tower\"></i>&nbsp; Connecting to\n              your wallet\n            </p>\n\n\n            <div\n              dangerouslySetInnerHTML={generateQrCode()}\n              className=\"text-align-center\"\n            ></div>\n\n\n            <p id=\"public-token\">\n              {copiedPublicToken ? (\n                <span id=\"public-token-copy__copied\">\n                  <i className=\"far fa-thumbs-up\"></i>\n                </span>\n              ) : (\n                <span\n                  id=\"public-token-copy\"\n                  onClick={() => {\n                    if (publicToken) {\n                      navigator.clipboard.writeText(publicToken);\n                      setCopiedPublicToken(true);\n                      setTimeout(() => setCopiedPublicToken(false), 2000);\n                    }\n                  }}\n                >\n                  <i className=\"far fa-copy\"></i>\n                </span>\n              )}\n\n              <span>\n                Public token: <span>{publicToken}</span>\n              </span>\n            </p>\n\n\n\n            <p className=\"text-align-center\">\n              Status: {beaconConnection ? \"Connected\" : \"Disconnected\"}\n            </p>\n          </div>\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else if (userAddress && !isNaN(userBalance)) {\n\n    return (\n      <div>\n        <h1>Buy my NFTs on Tezos</h1>\n        <div id=\"tabs\">\n\n          <div\n            id=\"buy\"\n            className={activeTab === \"buy\" ? \"active\" : \"\"}\n            onClick={() => setActiveTab(\"buy\")}\n          >\n            Buy NFT\n          </div>\n        </div>\n\n\n\n        <div>\n          <div style={{height:400, width: '100%'}}>\n            <DataGrid\n              rows={nftList}\n              columns={columns}\n              pageSize={100}\n            />\n\n          </div>\n          \n          <div>\n            &nbsp;\n\n             <br/>\n             <br/>\n             <br/>\n            &nbsp;<span> Enter Nft ID to buy </span>\n             <br/>\n             <br/>\n            &nbsp;<input\n              type=\"number\"\n              placeholder=\"NFT ID\"\n              value={buyId}\n              onChange={e => setId(parseInt(e.target.value,10))}\n            />\n            &nbsp;<button \n              className=\"button\" \n              onClick={buy_nft}\n            >\n              {loadingBuy ? (\n                <span>\n                  <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Please wait\n                </span>\n              ) : (\n                <span>\n                  <i className=\"fas fa-plus\"></i>&nbsp; Buy NFT\n                </span>\n              )}\n            </button>\n          </div>\n\n          <RecoverNFT\n            contract={contract}\n            setUserBalance={setUserBalance}\n            Tezos={Tezos}\n            userAddress={userAddress}\n            setStorage={setStorage}\n            setNftList={setNftList}\n          />\n\n          </div>\n\n\n\n            <p>\n              &nbsp;<i className=\"far fa-file-code\"></i>&nbsp;\n              <a\n                href={`https://better-call.dev/florencenet/${contractAddress}/operations`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {contractAddress}\n              </a>\n            </p>\n\n            <p>\n              &nbsp;<i className=\"far fa-address-card\"></i>&nbsp; {userAddress}\n            </p>\n\n            <p>\n              &nbsp;<i className=\"fas fa-piggy-bank\"></i>&nbsp;\n              {(userBalance / 1000000).toLocaleString(\"en-US\")} ꜩ\n            </p>\n\n\n          <DisconnectButton\n            wallet={wallet}\n            setPublicToken={setPublicToken}\n            setUserAddress={setUserAddress}\n            setUserBalance={setUserBalance}\n            setWallet={setWallet}\n            setTezos={setTezos}\n            setBeaconConnection={setBeaconConnection}\n          />\n\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else if (!publicToken && !userAddress && !userBalance) {\n    return (\n      <div>\n        <div className=\"title\">\n          <h1>Buy my NFTs on Tezos</h1>\n          <a href=\"https://app.netlify.com/start/deploy?repository=https://github.com/ecadlabs/taquito-boilerplate\">\n            <img\n              src=\"https://www.netlify.com/img/deploy/button.svg\"\n              alt=\"netlify-button\"\n            />\n          </a>\n        </div>\n        <div id=\"dialog\">\n          <header>Welcome to this NFT DApp</header>\n          <div id=\"content\">\n            <p>Hello!</p>\n            <p>Go forth and Tezos!</p>\n          </div>\n          <ConnectButton\n            Tezos={Tezos}\n            setContract={setContract}\n            setPublicToken={setPublicToken}\n            setWallet={setWallet}\n            setUserAddress={setUserAddress}\n            setUserBalance={setUserBalance}\n            setStorage={setStorage}\n            setNftList={setNftList}\n            contractAddress={contractAddress}\n            setBeaconConnection={setBeaconConnection}\n            wallet={wallet}\n          />\n        </div>\n        <div id=\"footer\">\n          <img src=\"built-with-taquito.png\" alt=\"Built with Taquito\" />\n        </div>\n      </div>\n    );\n  } else {\n    return <div>An error has occurred</div>;\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}